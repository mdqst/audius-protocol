build-audiusd:
  machine:
    image: ubuntu-2204:current
  resource_class: large
  steps:
    - attach_workspace:
        at: ./
    - checkout
    - gh/setup
    - run:
        name: install go
        command: |
          sudo apt-get update
          sudo apt-get install -y golang
    - run:
        name: Build audius-d wrapper image
        command: |
          IMAGE_TAG="$(sha1sum pkg/orchestration/Dockerfile | awk '{print $1}')"
          DOCKER_IMAGE="audius/audius-d:$IMAGE_TAG"

          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          
          if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
            echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
          else
            echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
            docker buildx create --use
            make build-push-wrapper WRAPPER_TAG="$IMAGE_TAG"
          fi
    - run:
        name: Build audiusd image
        command: |
          DOCKER_IMAGE="audius/audiusd:${CIRCLE_SHA1}"
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          
          if docker buildx imagetools inspect $DOCKER_IMAGE >/dev/null 2>&1; then
            echo "Docker image $DOCKER_IMAGE already exists. Skipping build."
          else
            echo "Docker image $DOCKER_IMAGE not found. Building and pushing..."
            docker buildx create --use
            make build-push-audiusd AD_TAG="$CIRCLE_SHA1"
          fi
    - run:
        name: Build audius-ctl for production
        command: |
          make audius-ctl-production-build
    - persist_to_workspace:
        root: ./
        paths:
          - bin/audius-ctl*

test-audiusd-devnet:
  machine:
    image: ubuntu-2204:current
  resource_class: xlarge
  steps:
    - setup-audius-ctl
    - run:
        name: Add audiusd hosts
        command: |
          audius_hosts='127.0.0.1 creator-1.devnet.audius-d discovery-1.devnet.audius-d identity.devnet.audius-d eth-ganache.devnet.audius-d acdc-ganache.devnet.audius-d solana-test-validator.devnet.audius-d'
          grep -q "$audius_hosts" /etc/hosts || sudo tee -a /etc/hosts \<<<$audius_hosts
    - run:
        name: Stand up devnet
        command: |
          IMAGE_TAG="$(sha1sum pkg/orchestration/Dockerfile | awk '{print $1}')"
          audius-ctl config create-context devnet -f dev-tools/templates/devnet.yaml
          # move private key to file
          audius-ctl config dump | grep 'privateKey:' | head -n1 | awk '{print $2}' > /tmp/private_key
          # replace private key value with file
          audius-ctl  config dump | sed -E '0,/privateKey/{s#privateKey: [a-zA-Z0-9]+#privateKey: /tmp/private_key#}' | audius-ctl config create-context devnet -f - 

          audius-ctl --debug devnet
          audius-ctl --debug register
          audius-ctl --debug up --await-healthy --audius-d-version $IMAGE_TAG
    - run:
        name: Test network status
        command: |
          audius-ctl status --ignore-health
    - run:
        name: Test restart node
        command: |
          IMAGE_TAG="$(sha1sum pkg/orchestration/Dockerfile | awk '{print $1}')"
          audius-ctl --debug restart discovery-1.devnet.audius-d -w -f --audius-d-version $IMAGE_TAG
          audius-ctl status --ignore-health
    - run:
        name: Teardown
        command: |
          audius-ctl --debug down -af
    - run:
        name: test isLocalhost config
        command: |
          audius-ctl config create-context test-localhost -f dev-tools/templates/test-localhost.yaml
          audius-ctl up --debug
          audius-ctl restart -f --debug
          audius-ctl down -f --debug
          audius-ctl devnet down --debug

test-config-subcommands:
  docker:
    - image: cimg/base:2023.01
  resource_class: small
  steps:
    - setup-audius-ctl
    - run:
        name: test default context is created
        command: |
          audius-ctl config
    - run:
        name: test create context
        command: |
          audius-ctl config create-context test -f dev-tools/templates/devnet.yaml
    - run:
        name: test modify context
        command: |
          audius-ctl config | sed 's/devnet/testnet/g' | audius-ctl config create-context test-modified -f -
          audius-ctl config | grep 'deployOn: testnet'
    - run:
        name: test invalid modify context
        command: |
          if audius-ctl config | sed 's/httpPort: 7000/httpPort: asdf/g' | audius-ctl config create-context test-modified-2 -f -; then
            echo Should not have succeeded due to type error
            false
          fi
          audius-ctl config dump
          audius-ctl config dump | grep 'httpPort: 7000'
    - run:
        name: test dump context to file
        command: |
          tmpfile="$(mktemp)"
          audius-ctl config dump -o "$tmpfile"
          grep 'deployOn: testnet' "$tmpfile"
    - run:
        name: test autocompletions
        command: |
          audius-ctl config use-context test
          audius-ctl config dump
          echo checking autocomplete for contexts
          audius-ctl __complete config use-context t | grep test
          echo checking autocomplete for discovery provider
          audius-ctl __complete up di | grep 'discovery-1.devnet.audius-d'
          echo checking autocomplete for creator
          audius-ctl __complete up cr | grep 'creator-1.devnet.audius-d'
          echo checking autocomplete for identity service
          audius-ctl __complete up id | grep 'identity.devnet.audius-d'
    - run:
        name: test delete context
        command: |
          audius-ctl config delete-context test-modified
          audius-ctl config delete-context test
          audius-ctl config  # should resort to default
          audius-ctl config current-context | grep 'default'
    - run:
        name: test fail to switch to nonexistent context
        command: |
          if audius-ctl config use-context idontexist; then
            echo Should not have succeeded switching to nonexistent context
            false
          fi
    - run:
        name: test version correctly formatted for production build
        command: |
          echo audius-ctl --version
          audius-ctl --version | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'

publish-audius-ctl:
  docker:
    - image: cimg/base:2023.01
  resource_class: small
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - gh/setup
    - run:
        name: Release audius-ctl
        command: |
          make release-audius-ctl

deploy-audiusd-staging:
  docker:
    - image: cimg/base:2023.01
  resource_class: small
  steps:
    - checkout
    - docker-login
    - install-crane
    - run:
        name: Release audiusd to staging
        command: |
          # release audius-d wrapper image
          IMAGE_TAG="$(sha1sum pkg/orchestration/Dockerfile | awk '{print $1}')"
          crane copy "audius/audius-d:$IMAGE_TAG" "audius/audius-d:default"

          # release audiusd image
          crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:prerelease"

deploy-audiusd-foundation:
  docker:
    - image: cimg/base:2023.01
  resource_class: small
  steps:
    - docker-login
    - install-crane
    - run:
        name: Release audiusd to foundation
        command: |
          crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:edge"

deploy-audiusd-sps:
  docker:
    - image: cimg/base:2023.01
  resource_class: small
  steps:
    - docker-login
    - install-crane
    - run:
        name: Release audiusd to foundation
        command: |
          crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:current"
